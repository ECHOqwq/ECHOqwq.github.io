[{"title":"Week1","url":"/2019/04/20/week1-周报/","content":"这周学习了:\n1.一点硬件方面最基础的知识\n2.同时加强了一点字符串\n3.还学了双向链表的建立及一些简单操作。\n下面附上双向链表的头插尾插以及一些简单操作的代码\ntypedef struct ARR\n{\n\tstruct ARR *front;\n\tint data;\n\tstruct ARR *tail; \n}*arr,node;\n\narr CreatHead(void)\n{\n\tint len;\n\tarr head=(arr)malloc(sizeof(node));\n\thead->front=head->tail=head;\n\tprintf (\"请输入链表的长度:\");\n\tscanf (\"%d\",&len); \n\twhile (len)\n\t{\n\t\tarr current=(arr)malloc(sizeof(node)); \n\t\tprintf (\"请输入数据:\");\n\t    scanf (\"%d\",&current->data);\n    \tcurrent->front=head;\n    \tcurrent->tail=head->tail;\n     \thead->tail->front=current;\n    \thead->tail=current;\n    \tlen--;\n\t}\n\treturn head;\n}\n\narr CreatTail(void)\n{\n\tint len;\n\tarr head,end,current;\n\thead=end=(arr)malloc(sizeof(node));\n\thead->tail=end;\n\tend->front=head;\n\tend->tail=head;\n\thead->front=end;\n\tprintf (\"请输入链表的长度:\");\n\tscanf (\"%d\",&len);\n\twhile (len)\n\t{\n\t\tcurrent=(arr)malloc(sizeof(node));\n\t\tprintf (\"请输入数据:\");\n\t\tscanf (\"%d\",&current->data);\n\t\tcurrent->front=end->front;\n\t\tcurrent->tail=end;\n\t\tend->front->tail=current;\n\t\tend->front=current; \n\t\tlen--;\n\t}\n\treturn head;\n}\n\narr CreatTail(void)\n{\n\tint len;\n\tarr head,pt,current;\n\thead=(arr)malloc(sizeof(node));\n\thead->front=NULL;\n\thead->tail=NULL;\n\tpt=head;\n\tprintf (\"请输入链表的长度:\");\n\tscanf (\"%d\",&len);\n\twhile (len)\n\t{\n\t\tcurrent=(arr)malloc(sizeof(node));\n\t\tprintf (\"请输入数据:\");\n\t\tscanf (\"%d\",&current->data);\n\t\tcurrent->tail=pt->tail;\n\t\tcurrent->front=pt;\n\t\tpt->tail=current;\n\t\tpt=current;\n\t\tlen--;\n\t}\n\tcurrent->tail=head;\n\thead->front=current;\n\treturn head;\n}\n\nvoid Insert(arr head)\n{\n\tint data;\n\tarr current,pt;\n\tpt=current=(arr)malloc(sizeof(node)); \n\tprintf (\"请输入你要插入的数据:\");\n    scanf (\"%d\",&current->data);\n    printf (\"请输入你要插在哪个数据后面:\");\n    scanf (\"%d\",&data);\n    pt=head->tail;\n    while (pt!=head)\n    {\n    \tif (pt->data==data)\n    \t{\n\t\t   current->front=pt;\n\t\t   current->tail=pt->tail;\n\t\t   pt->tail->front=current;\n\t\t   pt->tail=current;\n\t\t   return;\n    \t}\n    \tpt=pt->tail;\n    }\n    printf (\"不存在该数据!\\n\");\n}\n\nvoid Delete(arr head)\n{\n\tint data;\n\tprintf (\"请输入你要删除的数据:\");\n\tscanf (\"%d\",&data);\n\tarr pt=head->tail;\n\twhile (pt!=head)\n\t{\n\t\tif (pt->data==data)\n\t\t{\n\t\t\tpt->front->tail=pt->tail;\n\t\t\tpt->tail->front=pt->front;\n\t\t\treturn;\n\t\t}\n\t\tpt=pt->tail;\n\t}\n\tprintf (\"不存在该数据!\\n\");\n}\n\nvoid Output(arr head)\n{\n\tarr pt=head->tail;\n\twhile (pt!=head)\n\t{\n\t\tprintf (\"%d\\n\",pt->data);\n\t\tpt=pt->tail;\n\t}\n}\n\nint main (void)\n{\n\tint data;\n\tarr head;\n\thead=CreatTail();\n\tInsert(head);\n\tOutput(head);\n\tDelete(head);\n\tOutput(head); \n\treturn 0;\n}\n遇到的问题\n1.字符串，感觉自己还是没理解透，所以没能很好地运用。\n2.算法。感觉自己很多题也能做出来，但是代码太冗长，浪费太多内存了。\n3.全英语的算法题看不懂。\n总的代码应该敲了有1k行吧。","tags":["Week"],"categories":["周报"]},{"title":"Hello World","url":"/2019/04/13/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]